% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shape.r
\name{reshape.array}
\alias{reshape.array}
\title{Array reshaping}
\usage{
reshape.array(a, dim = NULL, order = c("C", "F"))
}
\arguments{
\item{a}{An array.}

\item{dim}{An integerish vector of new dimensions to be set on the array. One dimension axis can be -1. In this case, the value is inferred from the size of the array and remaining dimensions.}

\item{order}{The order in which elements of \code{a} should be read during rearrangement.
By default, the order is equivalent to the \code{C}-style ordering and means elements should be read in row-major order.
In opposite, the \code{Fortran}-style ordering means elements should be read in column-major order.}
}
\value{
The (redimensioned) array \code{a}.
}
\description{
Reshape an array.
}
\details{
This function corresponds to \code{reshape()} from NumPy (\href{https://numpy.org/doc/stable/reference/generated/numpy.reshape.html}{see}).\cr
Reshaping an array causes the dimension space (shape) to change. This can result in new dimensions (axes) as well as changes in dimension lengths.
In contrast to transpositions, which also lead to changes in the dimension space, the layout of the underlying data, i.e. their order, remains unchanged.
The data are flattened and then arranged into the new dimension space while retaining their order.
}
\seealso{
\code{\link[reticulate]{array_reshape}}.
}
